{"ast":null,"code":"import{useEffect,useState}from\"react\";function useStorage(){const[dreams,setDreams]=useState(()=>{const savedDreams=localStorage.getItem(\"dreams\");return savedDreams?JSON.parse(savedDreams):[];});const[series,setSeries]=useState([]);useEffect(()=>{localStorage.setItem(\"dreams\",JSON.stringify(dreams));},[dreams]);useEffect(()=>{localStorage.setItem(\"series\",JSON.stringify(series));},[series]);const updateStorage=obj=>{const anotherTemp=JSON.stringify(obj);const finalTemp=JSON.parse(anotherTemp);setDreams(prevDreams=>[...prevDreams,obj]);return dreams;};const importFromBrowser=()=>{setDreams(JSON.parse(localStorage.getItem(\"dreams\")));};const updateSeries=str=>{setSeries(prevSeries=>[...prevSeries,str]);return series;};const importSeries=()=>{setSeries(JSON.parse(localStorage.getItem(\"series\")));};return{updateStorage,importFromBrowser,dreams,importSeries,updateSeries,series};}export default useStorage;","map":{"version":3,"names":["useEffect","useState","useStorage","dreams","setDreams","savedDreams","localStorage","getItem","JSON","parse","series","setSeries","setItem","stringify","updateStorage","obj","anotherTemp","finalTemp","prevDreams","importFromBrowser","updateSeries","str","prevSeries","importSeries"],"sources":["C:/Users/jacob/Midnight-Insight/src/Components/useStorage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction useStorage() {\r\n    const [dreams, setDreams] = useState(() => {\r\n        const savedDreams = localStorage.getItem(\"dreams\");\r\n        return savedDreams ? JSON.parse(savedDreams) : [];\r\n    });\r\n\r\n    const [series, setSeries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"dreams\", JSON.stringify(dreams))\r\n    }, [dreams])\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"series\", JSON.stringify(series))\r\n    }, [series])\r\n\r\n    const updateStorage = (obj) => {\r\n        const anotherTemp = JSON.stringify(obj);\r\n        const finalTemp = JSON.parse(anotherTemp);\r\n        setDreams((prevDreams) => [...prevDreams, obj]);\r\n        return dreams;\r\n    }\r\n\r\n    const importFromBrowser = () => {\r\n        setDreams(JSON.parse(localStorage.getItem(\"dreams\")));\r\n    }\r\n\r\n    const updateSeries = (str) => {\r\n        setSeries((prevSeries) => [...prevSeries, str]);\r\n        return series;\r\n    }\r\n    const importSeries = () => {\r\n        setSeries(JSON.parse(localStorage.getItem(\"series\")));\r\n    }\r\n\r\n    return {\r\n        updateStorage,\r\n        importFromBrowser,\r\n        dreams,\r\n        importSeries,\r\n        updateSeries,\r\n        series,\r\n    }\r\n}\r\n\r\nexport default useStorage;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAClB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGH,QAAQ,CAAC,IAAM,CACvC,KAAM,CAAAI,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAClD,MAAO,CAAAF,WAAW,CAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAG,EAAE,CACrD,CAAC,CAAC,CAEF,KAAM,CAACK,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAExCD,SAAS,CAAC,IAAI,CACVM,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAEJ,IAAI,CAACK,SAAS,CAACV,MAAM,CAAC,CAAC,CAC1D,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAEZH,SAAS,CAAC,IAAI,CACVM,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAEJ,IAAI,CAACK,SAAS,CAACH,MAAM,CAAC,CAAC,CAC1D,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAI,aAAa,CAAIC,GAAG,EAAK,CAC3B,KAAM,CAAAC,WAAW,CAAGR,IAAI,CAACK,SAAS,CAACE,GAAG,CAAC,CACvC,KAAM,CAAAE,SAAS,CAAGT,IAAI,CAACC,KAAK,CAACO,WAAW,CAAC,CACzCZ,SAAS,CAAEc,UAAU,EAAK,CAAC,GAAGA,UAAU,CAAEH,GAAG,CAAC,CAAC,CAC/C,MAAO,CAAAZ,MAAM,CACjB,CAAC,CAED,KAAM,CAAAgB,iBAAiB,CAAGA,CAAA,GAAM,CAC5Bf,SAAS,CAACI,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CACzD,CAAC,CAED,KAAM,CAAAa,YAAY,CAAIC,GAAG,EAAK,CAC1BV,SAAS,CAAEW,UAAU,EAAK,CAAC,GAAGA,UAAU,CAAED,GAAG,CAAC,CAAC,CAC/C,MAAO,CAAAX,MAAM,CACjB,CAAC,CACD,KAAM,CAAAa,YAAY,CAAGA,CAAA,GAAM,CACvBZ,SAAS,CAACH,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CACzD,CAAC,CAED,MAAO,CACHO,aAAa,CACbK,iBAAiB,CACjBhB,MAAM,CACNoB,YAAY,CACZH,YAAY,CACZV,MACJ,CAAC,CACL,CAEA,cAAe,CAAAR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
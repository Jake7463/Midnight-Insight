{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Midnight-Insight\\\\src\\\\Components\\\\JornalPage\\\\DreamsToJournal.js\",\n  _s = $RefreshSig$();\nimport { PAll, PBig, SpanSpaceBetween, StyledSpanInput } from \"../AddADream/StyledFormInputs\";\nimport useStorage from \"../useStorage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DreamsToJournal(props) {\n  _s();\n  const {\n    dreams\n  } = useStorage();\n  console.log(dreams);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dreams.map(dream => /*#__PURE__*/_jsxDEV(SpanSpaceBetween, {\n      style: {\n        backgroundColor: \"#f1f1f1\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(PAll, {\n        children: [\"# \", dream.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PAll, {\n        children: dream.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PAll, {\n        children: dream.dreamName ? dream.dreamName : \"Unnamed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PBig, {\n        children: dream.isLucid ? \"V\" : \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PBig, {\n        children: dream.isNightmare ? \"v\" : \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PBig, {\n        children: dream.positivityScore ? dream.positivityScore : \"NA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PBig, {\n        children: dream.prideScore ? dream.prideScore : \"NA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PBig, {\n        children: dream.personalScore ? dream.personalScore : \"NA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, dream.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n_s(DreamsToJournal, \"rjsG9UMTtRaf8j4x909cHDV6qJM=\", false, function () {\n  return [useStorage];\n});\n_c = DreamsToJournal;\nexport default DreamsToJournal;\nvar _c;\n$RefreshReg$(_c, \"DreamsToJournal\");","map":{"version":3,"names":["PAll","PBig","SpanSpaceBetween","StyledSpanInput","useStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","DreamsToJournal","props","_s","dreams","console","log","children","map","dream","style","backgroundColor","id","fileName","_jsxFileName","lineNumber","columnNumber","date","dreamName","isLucid","isNightmare","positivityScore","prideScore","personalScore","_c","$RefreshReg$"],"sources":["C:/Users/jacob/Midnight-Insight/src/Components/JornalPage/DreamsToJournal.js"],"sourcesContent":["import { PAll, PBig, SpanSpaceBetween, StyledSpanInput } from \"../AddADream/StyledFormInputs\";\r\nimport useStorage from \"../useStorage\";\r\n\r\nfunction DreamsToJournal (props){\r\n    const { dreams } = useStorage();\r\n    console.log(dreams)\r\n    return(\r\n        <>\r\n        {dreams.map((dream) => (\r\n            <SpanSpaceBetween key={dream.id} style={{backgroundColor: \"#f1f1f1\"}}>\r\n                <PAll># {dream.id}</PAll>\r\n                <PAll>{dream.date}</PAll>\r\n                <PAll>{dream.dreamName? dream.dreamName : \"Unnamed\"}</PAll>\r\n                <PBig>{dream.isLucid? \"V\" : \"X\"}</PBig>\r\n                <PBig>{dream.isNightmare? \"v\" : \"X\"}</PBig>\r\n                <PBig>{dream.positivityScore ? dream.positivityScore : \"NA\"}</PBig>\r\n                <PBig>{dream.prideScore ? dream.prideScore : \"NA\"}</PBig>\r\n                <PBig>{dream.personalScore ? dream.personalScore : \"NA\"}</PBig>\r\n            </SpanSpaceBetween>\r\n        ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DreamsToJournal;"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,eAAe,QAAQ,+BAA+B;AAC7F,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,eAAeA,CAAEC,KAAK,EAAC;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAO,CAAC,GAAGR,UAAU,CAAC,CAAC;EAC/BS,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,oBACIN,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACCH,MAAM,CAACI,GAAG,CAAEC,KAAK,iBACdX,OAAA,CAACJ,gBAAgB;MAAgBgB,KAAK,EAAE;QAACC,eAAe,EAAE;MAAS,CAAE;MAAAJ,QAAA,gBACjET,OAAA,CAACN,IAAI;QAAAe,QAAA,GAAC,IAAE,EAACE,KAAK,CAACG,EAAE;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBlB,OAAA,CAACN,IAAI;QAAAe,QAAA,EAAEE,KAAK,CAACQ;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBlB,OAAA,CAACN,IAAI;QAAAe,QAAA,EAAEE,KAAK,CAACS,SAAS,GAAET,KAAK,CAACS,SAAS,GAAG;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3DlB,OAAA,CAACL,IAAI;QAAAc,QAAA,EAAEE,KAAK,CAACU,OAAO,GAAE,GAAG,GAAG;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvClB,OAAA,CAACL,IAAI;QAAAc,QAAA,EAAEE,KAAK,CAACW,WAAW,GAAE,GAAG,GAAG;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3ClB,OAAA,CAACL,IAAI;QAAAc,QAAA,EAAEE,KAAK,CAACY,eAAe,GAAGZ,KAAK,CAACY,eAAe,GAAG;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnElB,OAAA,CAACL,IAAI;QAAAc,QAAA,EAAEE,KAAK,CAACa,UAAU,GAAGb,KAAK,CAACa,UAAU,GAAG;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzDlB,OAAA,CAACL,IAAI;QAAAc,QAAA,EAAEE,KAAK,CAACc,aAAa,GAAGd,KAAK,CAACc,aAAa,GAAG;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAR5CP,KAAK,CAACG,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACrB;EAAC,gBACA,CAAC;AAEX;AAACb,EAAA,CAnBQF,eAAe;EAAA,QACDL,UAAU;AAAA;AAAA4B,EAAA,GADxBvB,eAAe;AAqBxB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}